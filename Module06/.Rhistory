attach(birthwt)
# attach the data
attach(birthwt)
birthwt.head(5)
# attach the data
attach(birthwt)
head(birthwt,5)
race<-factor(race) # this asks R to see race as categorical
is.factor(race)
contrasts(race)
race<-factor(race) # this asks R to see race as categorical
is.factor(race)
contrasts(race)
# need to label the classes for race
levels(race) <- c("white", "black", "other")  # Dr. Woo HIGHLY recommends making names for classes in a category
contrasts(race)
# subset the data set by race
# need to use the original data values, not labels
dataW <- subset(birthwt,race=="1")
dataB <- subset(birthwt,race=="2")
dataO <- subset(birthwt,race=="3")
##fit 3 separate regressions, one for each region
modW <- lm(bwt~age,data=dataW)
modB <- lm(bwt~age,data=dataB)
modO <- lm(bwt~age,data=dataO)
##create a scatterplot with different colors and symbols for each race
plot(age,bwt,main="Birth Weight vs Maternal Age, Grouped by Race")
points(modW$age,dataG$bwt, pch=1, col="red")
points(modB$age,dataK$bwt, pch=2, col="brown")
points(modO$age,dataOther$bwt, pch=12, col="darkblue")
abline(modW,lty=1, col="red")
abline(modB,lty=2, col="brown")
abline(modO,lty=3, col="darkblue")
legend("topleft", c("White","Black","Other"), lty=c(1,2,3), pch=c(1,2,12), col=c("red","brown","darkblue"))
# subset the data set by race
# need to use the original data values, not labels
dataW <- subset(birthwt,race=="1")
dataB <- subset(birthwt,race=="2")
dataO <- subset(birthwt,race=="3")
##fit 3 separate regressions, one for each region
modW <- lm(bwt~age,data=dataW)
modB <- lm(bwt~age,data=dataB)
modO <- lm(bwt~age,data=dataO)
##create a scatterplot with different colors and symbols for each race
plot(age,bwt,main="Birth Weight vs Maternal Age, Grouped by Race")
points(modW$age,modW$bwt, pch=1, col="red")
points(modB$age,modB$bwt, pch=2, col="brown")
points(modO$age,modO$bwt, pch=12, col="darkblue")
abline(modW,lty=1, col="red")
abline(modB,lty=2, col="brown")
abline(modO,lty=3, col="darkblue")
legend("topleft", c("White","Black","Other"), lty=c(1,2,3), pch=c(1,2,12), col=c("red","brown","darkblue"))
# subset the data set by race
# need to use the original data values, not labels
dataW <- subset(birthwt,race=="1")
dataB <- subset(birthwt,race=="2")
dataO <- subset(birthwt,race=="3")
##fit 3 separate regressions, one for each region
modW <- lm(bwt~age,data=dataW)
modB <- lm(bwt~age,data=dataB)
modO <- lm(bwt~age,data=dataO)
##create a scatterplot with different colors and symbols for each race
plot(age,bwt,main="Birth Weight vs Maternal Age, Grouped by Race")
points(dataW$age,dataW$bwt, pch=1, col="red")
points(dataB$age,dataB$bwt, pch=2, col="brown")
points(dataO$age,dataO$bwt, pch=12, col="darkblue")
abline(modW,lty=1, col="red")
abline(modB,lty=2, col="brown")
abline(modO,lty=3, col="darkblue")
legend("topleft", c("White","Black","Other"), lty=c(1,2,3), pch=c(1,2,12), col=c("red","brown","darkblue"))
# subset the data set by race
# need to use the original data values, not labels
dataW <- subset(birthwt,race=="1")
dataB <- subset(birthwt,race=="2")
dataO <- subset(birthwt,race=="3")
##fit 3 separate regressions, one for each region
modW <- lm(bwt~age,data=dataW)
modB <- lm(bwt~age,data=dataB)
modO <- lm(bwt~age,data=dataO)
##create a scatterplot with different colors and symbols for each race
plot(age,bwt,main="Birth Weight vs Maternal Age, Grouped by Race")
points(dataW$age,dataW$bwt, pch=1, col="red")
points(dataB$age,dataB$bwt, pch=2, col="brown")
points(dataO$age,dataO$bwt, pch=12, col="blue")
abline(modW,lty=1, col="red")
abline(modB,lty=2, col="brown")
abline(modO,lty=3, col="blue")
legend("topleft", c("White","Black","Other"), lty=c(1,2,3), pch=c(1,2,12), col=c("red","brown","darkblue"))
# subset the data set by race
# need to use the original data values, not labels
dataW <- subset(birthwt,race=="1")
dataB <- subset(birthwt,race=="2")
dataO <- subset(birthwt,race=="3")
##fit 3 separate regressions, one for each region
modW <- lm(bwt~age,data=dataW)
modB <- lm(bwt~age,data=dataB)
modO <- lm(bwt~age,data=dataO)
##create a scatterplot with different colors and symbols for each race
plot(age,bwt,main="Birth Weight vs Maternal Age, Grouped by Race")
points(dataW$age,dataW$bwt, pch=1, col="green")
points(dataB$age,dataB$bwt, pch=2, col="brown")
points(dataO$age,dataO$bwt, pch=12, col="blue")
abline(modW,lty=1, col="green")
abline(modB,lty=2, col="brown")
abline(modO,lty=3, col="blue")
legend("topleft", c("White","Black","Other"), lty=c(1,2,3), pch=c(1,2,12), col=c("red","brown","darkblue"))
# subset the data set by race
# need to use the original data values, not labels
dataW <- subset(birthwt,race=="1")
dataB <- subset(birthwt,race=="2")
dataO <- subset(birthwt,race=="3")
##fit 3 separate regressions, one for each region
modW <- lm(bwt~age,data=dataW)
modB <- lm(bwt~age,data=dataB)
modO <- lm(bwt~age,data=dataO)
##create a scatterplot with different colors and symbols for each race
plot(age,bwt,main="Birth Weight vs Maternal Age, Grouped by Race")
points(dataW$age,dataW$bwt, pch=1, col="green")
points(dataB$age,dataB$bwt, pch=2, col="brown")
points(dataO$age,dataO$bwt, pch=12, col="blue")
abline(modW,lty=1, col="green")
abline(modB,lty=2, col="brown")
abline(modO,lty=3, col="blue")
legend("topleft", c("White","Black","Other"), lty=c(1,2,3), pch=c(1,2,12), col=c("green","brown","darkblue"))
race<-factor(race) # this asks R to see race as categorical
is.factor(race)
contrasts(race)
# need to label the classes for race
levels(race) <- c("white", "black", "other")  # Dr. Woo HIGHLY recommends making names for classes in a category
contrasts(race)
# attach the data
attach(birthwt)
head(birthwt,5)
?birthwt
modelInteractions <- lm(bwt~age*race)
summary(modelInteractions)
interceptBlack = 2583.54 + 1022.79
interceptBlack
interceptOther = 2583.54 + 326.05
interceptOther
slopeBlack = 21.37 - 62.54
slopeBlack
slopeOther = 21.37 - 26.03
slopeOther
(26159 + 22894) / 2
(26159 + 22894 + 22894) / 3
averageAllRegions = (26159 + 22894 + 22894) / 3
averageAllRegions
averageSpend = (3901 + 3274 + 3919) / 3
averageSpend
11303234 * 2
MSRSpendArea = 9720281 * 2
MSRSpendArea = 9720281 * 2
MSRSpendArea
# calculate that F statistic using SSR's and SSE
#F0 = (SSR(B4,B5|B3,B2,B1,B0)) / 5166633
SSRofInterest = 117.7856 * 5166633
print(paste("SSRofInterest is: ", SSRofInterest))
# create the critical value
criticalFValue = qf(0.95,5,107)
print(paste("The critical value is: ", criticalFValue))
# create the pvalue
#pvalue = 1-pf(F0,3,107)
#print(paste("The p value for the F statistic is: ", pvalue))
# calculate that F statistic using SSR's and SSE
#F0 = (SSR(B4,B5|B3,B2,B1,B0)/2) / 5166633
SSRofInterest = 117.7856 * 5166633 * 2
print(paste("SSRofInterest is: ", SSRofInterest))
# create the critical value
criticalFValue = qf(0.95,5,107)
print(paste("The critical value is: ", criticalFValue))
# create the pvalue
#pvalue = 1-pf(F0,3,107)
#print(paste("The p value for the F statistic is: ", pvalue))
# calculate that F statistic using SSR's and SSE
#F0 = (SSR(B4,B5|B3,B2,B1,B0)/2) / 5166633
#SSRofInterest = 117.7856 * 5166633 * 2
#print(paste("SSRofInterest is: ", SSRofInterest))
F0 = 117.7856
print(paste("Given F0 is: ", F0))
# create the critical value
criticalFValue = qf(0.95,5,107)
print(paste("The critical value is: ", criticalFValue))
# create the pvalue
#pvalue = 1-pf(F0,3,107)
#print(paste("The p value for the F statistic is: ", pvalue))
# calculate that F statistic using SSR's and SSE
#F0 = (SSR(B4,B5|B3,B2,B1,B0)/2) / 5166633
#SSRofInterest = 117.7856 * 5166633 * 2
#print(paste("SSRofInterest is: ", SSRofInterest))
F0 = 117.7856
print(paste("Given F0 is: ", F0))
# create the critical value
#criticalFValue = qf(0.95,5,107)
#print(paste("The critical value is: ", criticalFValue))
# test p value from book example
testpvalue = 1-pf(54.25,3,19)
print(paste("The test p value from book example for the F statistic is: ", testpvalue))
# create the pvalue
pvalue = 1-pf(F0,5,107)
print(paste("The p value for the F statistic is: ", pvalue))
# calculate that F statistic using SSR's and SSE
#F0 = (SSR(B4,B5|B3,B2,B1,B0)/2) / 5166633
#SSRofInterest = 117.7856 * 5166633 * 2
#print(paste("SSRofInterest is: ", SSRofInterest))
F0 = 117.7856
print(paste("Given F0 is: ", F0))
# create the critical value
#criticalFValue = qf(0.95,5,107)
#print(paste("The critical value is: ", criticalFValue))
# test p value from book example
testpvalue = 1-pf(54.25,3,6)
print(paste("The test p value from book example for the F statistic is: ", testpvalue))
# create the pvalue
pvalue = 1-pf(F0,5,107)
print(paste("The p value for the F statistic is: ", pvalue))
# calculate that F statistic using SSR's and SSE
#F0 = (SSR(B4,B5|B3,B2,B1,B0)/2) / 5166633
#SSRofInterest = 117.7856 * 5166633 * 2
#print(paste("SSRofInterest is: ", SSRofInterest))
F0 = 117.7856
print(paste("Given F0 is: ", F0))
# create the critical value
#criticalFValue = qf(0.95,5,107)
#print(paste("The critical value is: ", criticalFValue))
# test p value from book example
testpvalue = 1-pf(54.25,3,12)
print(paste("The test p value from book example for the F statistic is: ", testpvalue))
# create the pvalue
pvalue = 1-pf(F0,5,107)
print(paste("The p value for the F statistic is: ", pvalue))
# calculate that F statistic using SSR's and SSE
#F0 = (SSR(B4,B5|B3,B2,B1,B0)/2) / 5166633
#SSRofInterest = 117.7856 * 5166633 * 2
#print(paste("SSRofInterest is: ", SSRofInterest))
F0 = 117.7856
print(paste("Given F0 is: ", F0))
# create the critical value
#criticalFValue = qf(0.95,5,107)
#print(paste("The critical value is: ", criticalFValue))
# test p value from book example
testpvalue = 1-pf(54.25,3,12)
print(paste("The test p value from book example for the F statistic is: ", testpvalue))
# create the pvalue
pvalue = 1-pf(F0,5,30)
print(paste("The p value for the F statistic is: ", pvalue))
# calculate that F statistic using SSR's and SSE
#F0 = (SSR(B4,B5|B3,B2,B1,B0)/2) / 5166633
#SSRofInterest = 117.7856 * 5166633 * 2
#print(paste("SSRofInterest is: ", SSRofInterest))
F0 = 117.7856
print(paste("Given F0 is: ", F0))
# create the critical value
# page 272 I think gives the test statistic
dfReducedModel = 47
dfFullModel = 45
criticalFValue = qf(0.95,(dfReducedModel - dfFullModel),dfFullModel)
print(paste("The critical value is: ", criticalFValue))
# test p value from book example
testpvalue = 1-pf(54.25,3,12)
print(paste("The test p value from book example for the F statistic is: ", testpvalue))
# create the pvalue
pvalue = 1-pf(F0,5,30)
print(paste("The p value for the F statistic is: ", pvalue))
# knowns
dfReducedModel = 47
dfFullModel = 45
SSEReduced = 232498501 + 9720281
SSEFull = 232498501
# calculate that F statistic using SSR's and SSE
F0 = ((SSEReduced - SSEFull) / (dfReducedModel - dfFullModel)) / (SSEFull / dfFullModel)
print(paste("F0 is: ", F0))
# create the critical value
# page 272 I think gives the test statistic
criticalFValue = qf(0.95,(dfReducedModel - dfFullModel),dfFullModel)
print(paste("The critical value is: ", criticalFValue))
# create the pvalue
#pvalue = 1-pf(F0,5,30)
#print(paste("The p value for the F statistic is: ", pvalue))
# knowns
dfReducedModel = 47
dfFullModel = 45
SSEReduced = 232498501 + 9720281
SSEFull = 232498501
# calculate that F statistic using SSR's and SSE
# page 272 I think gives the F0 calculation
F0 = ((SSEReduced - SSEFull) / (dfReducedModel - dfFullModel)) / (SSEFull / dfFullModel)
print(paste("F0 is: ", F0))
# create the critical value
# page 272 I think gives the test statistic
criticalFValue = qf(0.95,(dfReducedModel - dfFullModel),dfFullModel)
print(paste("The critical value is: ", criticalFValue))
pvalue = 1-pf(F0,(dfReducedModel - dfFullModel),dfFullModel)
print(paste("The p value for the F statistic is: ", pvalue))
b2hat = sqrt(588126.71689)
b2hat
# multiplier for confidence interval is t((1-.05)/(2*g),n-p)
# g == 3 == number of pairwise comparisons we are making
# n = 51
# p = 4
deltaMultiplier <- qt((1 - (.05/6)), (51 - 4))
deltaMultiplier
# multiplier for confidence interval is t((1-.05)/(2*g),n-p)
# g == 3 == number of pairwise comparisons we are making
# n = 51
# p = 4
deltaMultiplier <- qt((1 - (.05/6)), (51 - 4))
print(paste("The 95% multiplier is: ", deltaMultiplier))
##obtain the variance-covariance matrix of the coefficients
vcov(reduced)
reduced$coef
source('~/UVaCode/R/STAT6021/Module06/tutorial_module6-1.R', echo=TRUE)
sqrt(.03)
sqrt(1.116)
B2hat = 1
# multiplier for confidence interval is t((1-.05)/(2*g),n-p)
# g == 3 == number of pairwise comparisons we are making
# n = 51
# p = 4
deltaMultiplier <- qt((1 - (.05/6)), (51 - 4))
print(paste("The 95% multiplier is: ", deltaMultiplier))
seB2hat = sqrt(588126.71689)
# confidence interval = Bi-hat +- deltaMultiplier * se(Bi-hat)
B2CIlow = B2hat - (deltaMultiplier * seB2hat)
B2CIhigh = B2hat - (deltaMultiplier * seB2hat)
# for North region and South region
# multiplier for confidence interval is t((1-.05)/(2*g),n-p)
# g == 3 == number of pairwise comparisons we are making
# n = 51
# p = 4
deltaMultiplier <- qt((1 - (.05/6)), (51 - 4))
print(paste("The 95% multiplier is: ", deltaMultiplier))
seB2hat = sqrt(588126.71689)
# confidence interval = Bi-hat +- deltaMultiplier * se(Bi-hat)
B2CIlow = B2hat - (deltaMultiplier * seB2hat)
B2CIhigh = B2hat - (deltaMultiplier * seB2hat)
# for North region and South region
# multiplier for confidence interval is t((1-.05)/(2*g),n-p)
# g == 3 == number of pairwise comparisons we are making
# n = 51
# p = 4
deltaMultiplier <- qt((1 - (.05/6)), (51 - 4))
print(paste("The 95% multiplier is: ", deltaMultiplier))
seB2hat = sqrt(588126.71689)
# confidence interval = Bi-hat +- deltaMultiplier * se(Bi-hat)
B2CIlow = B2hat - (deltaMultiplier * seB2hat)
B2CIhigh = B2hat - (deltaMultiplier * seB2hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the North region and the South region, when spending per student is controlled is: ", B2CIlow, " - ", B2CIhigh))
B2hat = 529.40
# multiplier for confidence interval is t((1-.05)/(2*g),n-p)
# g == 3 == number of pairwise comparisons we are making
# n = 51
# p = 4
deltaMultiplier <- qt((1 - (.05/6)), (51 - 4))
print(paste("The 95% multiplier is: ", deltaMultiplier))
seB2hat = sqrt(588126.71689)
# confidence interval = Bi-hat +- deltaMultiplier * se(Bi-hat)
B2CIlow = B2hat - (deltaMultiplier * seB2hat)
B2CIhigh = B2hat - (deltaMultiplier * seB2hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the North region and the South region, when spending per student is controlled is: ", B2CIlow, " - ", B2CIhigh))
# multiplier for confidence interval is t((1-.05)/(2*g),n-p)
# g == 3 == number of pairwise comparisons we are making
# n = 51
# p = 4
deltaMultiplier <- qt((1 - (.05/6)), (51 - 4))
print(paste("The 95% multiplier is: ", deltaMultiplier))
seB2hat = sqrt(588126.71689)
# confidence interval = Bi-hat +- deltaMultiplier * se(Bi-hat)
B2CIlow = B2hat - (deltaMultiplier * seB2hat)
B2CIhigh = B2hat + (deltaMultiplier * seB2hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the North region and the South region, when spending per student is controlled is: ", B2CIlow, " - ", B2CIhigh))
# multiplier for confidence interval is t((1-.05)/(2*g),n-p)
# g == 3 == number of pairwise comparisons we are making
# n = 51
# p = 4
deltaMultiplier <- qt((1 - (.05/6)), (51 - 4))
print(paste("The 95% multiplier is: ", deltaMultiplier))
seB2hat = sqrt(588126.71689)
# confidence interval = Bi-hat +- deltaMultiplier * se(Bi-hat)
B2CIlow = B2hat - (deltaMultiplier * seB2hat)
B2CIhigh = B2hat + (deltaMultiplier * seB2hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the North region and the South region, when spending per student is controlled is: ", B2CIlow, " to ", B2CIhigh))
B3hat = 1674.00
seB3hat = sqrt(.0000642)
B3CIlow = B3hat - (deltaMultiplier * seB3hat)
B3CIhigh = B3hat + (deltaMultiplier * seB3hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the North region and the West region, when spending per student is controlled is: ", B2CIlow, " to ", B2CIhigh))
B3hat = 1674.00
seB3hat = sqrt(.0000642)
B3CIlow = B3hat - (deltaMultiplier * B3hat)
B3CIhigh = B3hat + (deltaMultiplier * B3hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the North region and the West region, when spending per student is controlled is: ", B2CIlow, " to ", B2CIhigh))
B3hat = 1674.00
seB3hat = sqrt(.0000642)
B3CIlow = B3hat - (deltaMultiplier * seB3hat)
B3CIhigh = B3hat + (deltaMultiplier * seB3hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the North region and the West region, when spending per student is controlled is: ", B2CIlow, " to ", B2CIhigh))
B3hat = 1674.00
seB3hat = sqrt(.0000642)
B3CIlow = B3hat - (deltaMultiplier * seB3hat)
B3CIhigh = B3hat + (deltaMultiplier * seB3hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the North region and the West region, when spending per student is controlled is: ", B2CIlow, " to ", B2CIhigh))
B3hat = 1674.00
seB3hat = sqrt(.0000642)
B3CIlow = B3hat - (deltaMultiplier * seB3hat)
B3CIhigh = B3hat + (deltaMultiplier * seB3hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the North region and the West region, when spending per student is controlled is: ", B3CIlow, " to ", B3CIhigh))
interceptBlack <- 2583.54 + 1022.79
interceptBlack
interceptOther <- 2583.54 + 326.05
interceptOther
slopeBlack <- 21.37 - 62.54
slopeBlack
slopeOther <- 21.37 - 26.03
slopeOther
averageAllRegions <- (26159 + 22894 + 22894) / 3
averageAllRegions
averageSpend <- (3901 + 3274 + 3919) / 3
averageSpend
MSRSpendArea <- 9720281 * 2
MSRSpendArea
# knowns
dfReducedModel <- 47
dfFullModel <- 45
SSEReduced <- 232498501 + 9720281
SSEFull <- 232498501
# calculate that F statistic using SSR's and SSE
# page 272 I think gives the F0 calculation
F0 <- ((SSEReduced - SSEFull) / (dfReducedModel - dfFullModel)) / (SSEFull / dfFullModel)
print(paste("F0 is: ", F0))
# create the critical value
# page 272 I think gives the test statistic
criticalFValue <- qf(0.95,(dfReducedModel - dfFullModel),dfFullModel)
print(paste("The critical value is: ", criticalFValue))
pvalue <- 1-pf(F0,(dfReducedModel - dfFullModel),dfFullModel)
print(paste("The p value for the F statistic is: ", pvalue))
B2hat <- 529.40
# multiplier for confidence interval is t((1-.05)/(2*g),n-p)
# g == 3 == number of pairwise comparisons we are making
# n = 51
# p = 4
deltaMultiplier <- qt((1 - (.05/6)), (51 - 4))
print(paste("The 95% multiplier is: ", deltaMultiplier))
seB2hat <- sqrt(588126.71689)
# confidence interval = Bi-hat +- deltaMultiplier * se(Bi-hat)
B2CIlow <- B2hat - (deltaMultiplier * seB2hat)
B2CIhigh <- B2hat + (deltaMultiplier * seB2hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the North region and the South region is: ", B2CIlow, " to ", B2CIhigh))
B3hat <- 1674.00
seB3hat <- sqrt(.0000642)
B3CIlow <- B3hat - (deltaMultiplier * seB3hat)
B3CIhigh <- B3hat + (deltaMultiplier * seB3hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the North region and the West region is: ", B3CIlow, " to ", B3CIhigh))
B2B3hat <- B2hat - B3hat
seB2B3hat <- sqrt(.00002442)
B2B3CIlow <- B2B3hat - (deltaMultiplier * seB2B3hat)
B2B3CIhigh <- B2B3hat + (deltaMultiplier * seB2B3hat)
print(paste("The 95% CI for the mean difference in the mean teacher salary between the South region and the West region is: ", B2B3CIlow, " to ", B2B3CIhigh))
# subset the data set by race
# need to use the original data values, not labels
dataW <- subset(birthwt,race=="1")
dataB <- subset(birthwt,race=="2")
dataO <- subset(birthwt,race=="3")
##fit 3 separate regressions, one for each region
modW <- lm(bwt~age,data=dataW)
modB <- lm(bwt~age,data=dataB)
modO <- lm(bwt~age,data=dataO)
##create a scatterplot with different colors and symbols for each race
plot(age,bwt,main="Birth Weight vs Maternal Age, Grouped by Race")
points(dataW$age,dataW$bwt, pch=1, col="orange")
points(dataB$age,dataB$bwt, pch=2, col="brown")
points(dataO$age,dataO$bwt, pch=12, col="blue")
abline(modW,lty=1, col="orange")
abline(modB,lty=2, col="brown")
abline(modO,lty=3, col="blue")
legend("topleft", c("White","Black","Other"), lty=c(1,2,3), pch=c(1,2,12), col=c("orange","brown","darkblue"))
# subset the data set by race
# need to use the original data values, not labels
dataW <- subset(birthwt,race=="1")
dataB <- subset(birthwt,race=="2")
dataO <- subset(birthwt,race=="3")
##fit 3 separate regressions, one for each region
modW <- lm(bwt~age,data=dataW)
modB <- lm(bwt~age,data=dataB)
modO <- lm(bwt~age,data=dataO)
##create a scatterplot with different colors and symbols for each race
plot(age,bwt,main="Birth Weight vs Maternal Age, Grouped by Race")
points(dataW$age,dataW$bwt, pch=1, col="orange")
points(dataB$age,dataB$bwt, pch=2, col="brown")
points(dataO$age,dataO$bwt, pch=12, col="purple")
abline(modW,lty=1, col="orange")
abline(modB,lty=2, col="brown")
abline(modO,lty=3, col="purple")
legend("topleft", c("White","Black","Other"), lty=c(1,2,3), pch=c(1,2,12), col=c("orange","brown","purple"))
# subset the data set by race
# need to use the original data values, not labels
dataW <- subset(birthwt,race=="1")
dataB <- subset(birthwt,race=="2")
dataO <- subset(birthwt,race=="3")
##fit 3 separate regressions, one for each region
modW <- lm(bwt~age,data=dataW)
modB <- lm(bwt~age,data=dataB)
modO <- lm(bwt~age,data=dataO)
##create a scatterplot with different colors and symbols for each race
plot(age,bwt,main="Birth Weight vs Maternal Age, Grouped by Race")
points(dataW$age,dataW$bwt, pch=1, col="orange")
points(dataB$age,dataB$bwt, pch=2, col="black")
points(dataO$age,dataO$bwt, pch=12, col="purple")
abline(modW,lty=1, col="orange")
abline(modB,lty=2, col="black")
abline(modO,lty=3, col="purple")
legend("topleft", c("White","Black","Other"), lty=c(1,2,3), pch=c(1,2,12), col=c("orange","black","purple"))
